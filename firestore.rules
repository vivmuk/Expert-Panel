rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      // User can only access their own document (e.g., to create it implicitly if needed, though not typical)
      // allow read, write: if request.auth != null && request.auth.uid == userId;

      // Reports subcollection within each user's document
      match /reports/{reportId} {
        // Allow create if the user is authenticated and the userId in the path matches their uid.
        // The report data being written should also contain the correct userId for consistency.
        allow create: if request.auth != null && request.auth.uid == userId 
                        && request.resource.data.userId == request.auth.uid;
        
        // Allow read, update, delete if the user is authenticated and the userId in the path matches their uid.
        allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      }

      // Potentially other subcollections for the user in the future can be defined here.
    }

    // By default, deny all other access to any other collections/documents.
    // This is implicitly covered by not having a match block that allows it,
    // but you can be explicit if preferred for very top-level collections.
    // match /{document=**} {
    //   allow read, write: if false;
    // }
  }
}